[{"path":[]},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cookies","title":"Contributing to cookies","text":"outlines propose change cookies.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cookies","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cookies","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cookies","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"r4ds/cookies\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to cookies","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. Prefix unexported functions ., .unexported_function. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cookies","text":"Please note cookies project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://r4ds.github.io/cookies/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cookies authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r4ds.github.io/cookies/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer. Klaus Hartl. Copyright holder.            js-cookie Fagner Brack. Copyright holder.            js-cookie John Coene. Copyright holder.            JavaScript R chapter cookies","code":""},{"path":"https://r4ds.github.io/cookies/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2022). cookies: Use Browser Cookies Shiny. https://github.com/r4ds/cookies, https://r4ds.github.io/cookies/.","code":"@Manual{,   title = {cookies: Use Browser Cookies with Shiny},   author = {Jon Harmon},   year = {2022},   note = {https://github.com/r4ds/cookies, https://r4ds.github.io/cookies/}, }"},{"path":"https://r4ds.github.io/cookies/index.html","id":"cookies","dir":"","previous_headings":"","what":"Use Browser Cookies with Shiny","title":"Use Browser Cookies with Shiny","text":"Cookies name-value pairs saved browser website. Cookies allow websites persist information user use website. goal {cookies} make easy possible use cookies Shiny apps.","code":""},{"path":"https://r4ds.github.io/cookies/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use Browser Cookies with Shiny","text":"intend release package CRAN soon finish basic functionality. can install development version {cookies} GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"r4ds/cookies\")"},{"path":"https://r4ds.github.io/cookies/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Use Browser Cookies with Shiny","text":"Wrap ui add_cookie_handlers() add cookie object shiny input. set cookie user loads app, use set_cookie_on_load(). Use set_cookie() remove_cookie() manage cookies app. Use extract_cookie() extract value named cookie request object, passed ui Shiny app loads.","code":"ui <- shiny::fluidPage(     title = \"Hello Shiny!\",   fluidRow(     column(width = 4,       \"4\"     ),     column(width = 3, offset = 2,       \"3 offset 2\"     )   ) )  ui_with_cookie_handlers <- add_cookie_handlers(ui) part_of_ui <- set_cookie_on_load(   name = \"my_cookie\",    contents = \"contents of my cookie\",   expiration = 10 ) server <- function(input, output, session) {   shiny::observeEvent(input$cookie_set, {     set_cookie(       name = \"my_cookie\",       contents = \"contents of my cookie\",       expiration = 10     )   })      shiny::observeEvent(input$cookie_remove, {     remove_cookie(name = \"my_cookie\")   })      output$display_cookie <- renderUI({     if(!is.null(input$cookies$my_cookie)) {       shiny::h3(\"Your cookie:\", input$cookies$my_cookie)     } else {       shiny::h3(\"Enter some text.\")     }   }) } req <- list(HTTP_COOKIE = \"cookie1=expected_value; cookie2=1; cookie3=2\") extract_cookie(req, \"cookie1\") #> [1] \"expected_value\"  ui <- function(request) {   cookie1 <- extract_cookie(request, \"cookie1\")   if (cookie1 == \"expected_value\") {     \"A ui for the expected value.\"   } else {     \"A different ui.\"   } } ui(req) #> [1] \"A ui for the expected value.\""},{"path":"https://r4ds.github.io/cookies/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Use Browser Cookies with Shiny","text":"Please note cookies project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Cookies to an Existing Shiny UI — add_cookie_handlers","title":"Add Cookies to an Existing Shiny UI — add_cookie_handlers","text":"Wrap Shiny ui function order add cookie-handling functionality.","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Cookies to an Existing Shiny UI — add_cookie_handlers","text":"","code":"add_cookie_handlers(ui)"},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Cookies to an Existing Shiny UI — add_cookie_handlers","text":"ui 0- 1-argument function defining UI Shiny app, shiny::tagList().","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Cookies to an Existing Shiny UI — add_cookie_handlers","text":"function takes request shiny::tagList() includes dependencies needed handle cookies.","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Cookies to an Existing Shiny UI — add_cookie_handlers","text":"","code":"str(add_cookie_handlers(\"example\")) #> function (request)"},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach the js-cookie Javascript Library for Shiny — cookie_dependency","title":"Attach the js-cookie Javascript Library for Shiny — cookie_dependency","text":"Add js-cookie Javascript library HTML dependency, make cookies available Shiny input object.","code":""},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach the js-cookie Javascript Library for Shiny — cookie_dependency","text":"","code":"cookie_dependency()"},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach the js-cookie Javascript Library for Shiny — cookie_dependency","text":"htmltools::htmlDependency(), Shiny uses add js-cookie Javascript library exactly .","code":""},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach the js-cookie Javascript Library for Shiny — cookie_dependency","text":"","code":"cookie_dependency() #> List of 10 #>  $ name      : chr \"shinycookie\" #>  $ version   : chr \"1.0.0\" #>  $ src       :List of 1 #>   ..$ file: chr \"js\" #>  $ meta      : NULL #>  $ script    : chr [1:2] \"js.cookie.js\" \"cookie_input.js\" #>  $ stylesheet: NULL #>  $ head      : NULL #>  $ attachment: NULL #>  $ package   : chr \"cookies\" #>  $ all_files : logi TRUE #>  - attr(*, \"class\")= chr \"html_dependency\""},{"path":"https://r4ds.github.io/cookies/reference/cookies-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cookies: Use Browser Cookies with Shiny — cookies-package","title":"cookies: Use Browser Cookies with Shiny — cookies-package","text":"Cookies name-value pairs saved browser website. Cookies allow websites persist information user use website. package provides tools working cookies Shiny apps.","code":""},{"path":[]},{"path":"https://r4ds.github.io/cookies/reference/cookies-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cookies: Use Browser Cookies with Shiny — cookies-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID) contributors: Klaus Hartl (js-cookie) [copyright holder] Fagner Brack (js-cookie) [copyright holder] John Coene (JavaScript R chapter cookies) [copyright holder]","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shared-parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters Used in Multiple Functions — .shared-parameters","title":"Parameters Used in Multiple Functions — .shared-parameters","text":"Parameters Used Multiple Functions","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shared-parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters Used in Multiple Functions — .shared-parameters","text":"name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. contents contents cookie single character value. expiration Days cookie expire. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for Javascript — .shiny_toJSON","title":"Prep Data for Javascript — .shiny_toJSON","text":"unexported function shiny, directly copy/paste. formats things way Shiny's JS functions expect.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for Javascript — .shiny_toJSON","text":"","code":".shiny_toJSON(   x,   ...,   dataframe = \"columns\",   null = \"null\",   na = \"null\",   auto_unbox = TRUE,   digits = getOption(\"shiny.json.digits\", 16),   use_signif = TRUE,   force = TRUE,   POSIXt = \"ISO8601\",   UTC = TRUE,   rownames = FALSE,   keep_vec_names = TRUE,   strict_atomic = TRUE )"},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for Javascript — .shiny_toJSON","text":"x object encoded ... Arguments passed jsonlite::toJSON matrix encode matrices higher dimensional arrays: must one 'rowmajor' 'columnmajor'. Date encode Date objects: must one 'ISO8601' 'epoch' factor encode factor objects: must one 'string' 'integer' complex encode complex numbers: must one 'string' 'list' raw encode raw objects: must one 'base64', 'hex' 'mongo' pretty adds indentation whitespace JSON output. Can TRUE/FALSE number specifying number spaces indent. See prettify() dataframe encode data.frame objects: must one 'rows', 'columns' 'values' null encode NULL values within list: must one 'null' 'list' na print NA values: must one 'null' 'string'. Defaults class specific auto_unbox automatically unbox() atomic vectors length 1. usually safer avoid instead use unbox() function unbox individual elements. exception objects class AsIs (.e. wrapped ()) automatically unboxed. way mark single values length-1 arrays. digits max number decimal digits print numeric values. Use () specify significant digits. Use NA max precision. use_signif Passed print method. force unclass/skip objects classes defined JSON mapping POSIXt encode POSIXt (datetime) objects: must one 'string', 'ISO8601', 'epoch' 'mongo' UTC Passed print method. rownames Passed print method. keep_vec_names Passed print method. strict_atomic Used deal atomic vectors /unboxing.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for Javascript — .shiny_toJSON","text":"Jsonified text.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Sure Cookie Attributes are Valid — .validate_attributes","title":"Make Sure Cookie Attributes are Valid — .validate_attributes","text":"Make Sure Cookie Attributes Valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Sure Cookie Attributes are Valid — .validate_attributes","text":"","code":".validate_attributes(expiration, secure_only, domain, path, same_site)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Sure Cookie Attributes are Valid — .validate_attributes","text":"expiration Days cookie expire. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Sure Cookie Attributes are Valid — .validate_attributes","text":"list attributes.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Sure same_site is Valid — .validate_same_site","title":"Make Sure same_site is Valid — .validate_same_site","text":"Make Sure same_site Valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Sure same_site is Valid — .validate_same_site","text":"","code":".validate_same_site(same_site, secure_only)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Sure same_site is Valid — .validate_same_site","text":"same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost).","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Sure same_site is Valid — .validate_same_site","text":"One NULL, \"Strict\", \"Lax\", \"None\".","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an Individual Cookie from a Shiny Request — extract_cookie","title":"Extract an Individual Cookie from a Shiny Request — extract_cookie","text":"Shiny request object includes cookies available app. function extracts value named cookie request.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an Individual Cookie from a Shiny Request — extract_cookie","text":"","code":"extract_cookie(request, name)"},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an Individual Cookie from a Shiny Request — extract_cookie","text":"request shiny request object. name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract an Individual Cookie from a Shiny Request — extract_cookie","text":"contents cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract an Individual Cookie from a Shiny Request — extract_cookie","text":"","code":"req <- list(HTTP_COOKIE = \"cookie1=expected_value; cookie2=1; cookie3=2\") extract_cookie(req, \"cookie1\") #> [1] \"expected_value\" extract_cookie(req, \"cookie2\") #> [1] \"1\" extract_cookie(list(), \"cookie1\") #> [1] NA extract_cookie(NULL, \"cookie1\") #> [1] NA"},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract All Cookies from a Shiny Request — extract_cookies","title":"Extract All Cookies from a Shiny Request — extract_cookies","text":"Shiny request object includes cookies available app. function extracts cookies named list.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract All Cookies from a Shiny Request — extract_cookies","text":"","code":"extract_cookies(request)"},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract All Cookies from a Shiny Request — extract_cookies","text":"request shiny request object.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract All Cookies from a Shiny Request — extract_cookies","text":"cookies request, list.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract All Cookies from a Shiny Request — extract_cookies","text":"","code":"req <- list(HTTP_COOKIE = \"cookie1=expected_value; cookie2=1; cookie3=2\") extract_cookies(req) #> $cookie1 #> [1] \"expected_value\" #>  #> $cookie2 #> [1] \"1\" #>  #> $cookie3 #> [1] \"2\" #>  extract_cookies(list()) #> NULL extract_cookies(NULL) #> NULL"},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Cookie — remove_cookie","title":"Remove a Cookie — remove_cookie","text":"Instruct user's browser remove cookie via JavaScript.","code":""},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Cookie — remove_cookie","text":"","code":"remove_cookie(name, session = shiny::getDefaultReactiveDomain())"},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Cookie — remove_cookie","text":"name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. session Session make child scope (default almost always used).","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or Update a Cookie — set_cookie","title":"Create or Update a Cookie — set_cookie","text":"Instruct user's browser create cookie via JavaScript.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or Update a Cookie — set_cookie","text":"","code":"set_cookie(   name,   contents,   expiration = 90,   secure_only = NULL,   domain = NULL,   path = NULL,   same_site = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or Update a Cookie — set_cookie","text":"name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. contents contents cookie single character value. expiration Days cookie expire. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. session Session make child scope (default almost always used).","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Tag to Add Cookies on Page Load — set_cookie_on_load","title":"Shiny Tag to Add Cookies on Page Load — set_cookie_on_load","text":"Generates javascript set cookie user's browser Shiny app first loads.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Tag to Add Cookies on Page Load — set_cookie_on_load","text":"","code":"set_cookie_on_load(   name,   contents,   expiration = 90,   secure_only = NULL,   domain = NULL,   path = NULL,   same_site = NULL )"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Tag to Add Cookies on Page Load — set_cookie_on_load","text":"name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. contents contents cookie single character value. expiration Days cookie expire. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny Tag to Add Cookies on Page Load — set_cookie_on_load","text":"shiny::tagList() provides HTML javascript set cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny Tag to Add Cookies on Page Load — set_cookie_on_load","text":"","code":"set_cookie_on_load(\"my_cookie\", \"contents of my cookie\") #> <script>Cookies.set(\"my_cookie\", \"contents of my cookie\", {\"expires\":90});<\/script> set_cookie_on_load(\"my_cookie\", \"contents of my cookie\", expiration = 10) #> <script>Cookies.set(\"my_cookie\", \"contents of my cookie\", {\"expires\":10});<\/script>"},{"path":"https://r4ds.github.io/cookies/news/index.html","id":"cookies-0009000","dir":"Changelog","previous_headings":"","what":"cookies 0.0.0.9000","title":"cookies 0.0.0.9000","text":"Added set_cookie() remove_cookie() handle cookies server (using JavaScript) (#5, #6). Added set_cookie_on_load() set cookie Shiny app loads (#4). Added add_cookie_handlers() wrap Shiny ui add cookie functionality (#3). Added extract_cookie() extract_cookies() extract cookies request object. Added NEWS.md file track changes package.","code":""}]
